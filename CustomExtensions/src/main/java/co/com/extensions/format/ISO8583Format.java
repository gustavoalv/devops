/**
 * 
 */
package co.com.extensions.format;

import co.com.extensions.handlers.CustomExtensionsHandler;
import co.com.extensions.handlers.ISO8583Handler;

import com.itko.citi.Converter;



/**
 * @author alvgu02
 *
 */
public class ISO8583Format {
	
	private final static int HEADER_LEN = 2;
	
	/**
	 * @param argv
	 * @throws Exception
	 */
	public static void main(String argv[]) throws Exception {
		
		int messageLength = -1;
		
		messageLength = 240;
		String message1 = "&";
		
		String hexData = Converter.convertStringToHex(message1);
		
		
		int largo = message1.length();
		
		String longitud = Converter.convertIntToHex(largo);

		if(longitud.length()%2 != 0){
			longitud = "0" + longitud;
		}
		
		String resultHex = longitud + hexData;
		
		String final1 =Converter.convertHexToString(resultHex);
		
		String configfile = "C:\\Lisa7.5.2\\8583-config.xml";

		// Conversion HEX a ISO8583 - Request
		{
			// String message = "
			
//			String message = "0200B2384481C9E0810000000000040000005000080000000030001008150018000026150018100865320000106601288066012881904142351704        150018010660MOVINT     BAN0591W02     0591                                    937008        2001340850518503004292";
			
//			String messageBr
			
//			String messageColpatria = "ISO0050000500800822000000000000004000000000000000107213605000001301";
			
			String messageColpatria = "00ISO0250000550200F23CC581A8E3801A00000000140000BC194097446491751690   003000000000010100010721355015160616355001079912010700000120030811170000100191117001000101374097446491751690=9912                00000215160600002           0102       0000Seguros de Vida Colpat11001        11 CO0240000000000000000000000000270000000000002003021000000001700160090TES10000    019    TES1030        048& 0000200048! C000026                   20      11           284097446491751690            020                    0201000021723          009000000000012  B24 B24 1 038                                      ";
			
			hexData = Converter.convertStringToHex(messageColpatria);
			
//			Brasil
//			String messageBr = "000016010200d100000054541300000000000000000000000100f224648128e0801600000000000000041040024791995707360030000000000266001219135651000015150654620076901000064830442504002479199570736d15061011111651600000f4f3f5f3f1f3f0f0f0f0f1f5c7d9c5c5d5f0f0f4f0f0f1f2f5f4f4f0f5404040404040d6d9c7c6c1d9c9d5c8c1d7e4d9c1d3e3c4c140404040404040d9c9d6c4c5d1c1d5c5c9d9d640c2d909860105098000000000000000e80580000000000e0040000000000000f1f140f1f7f7";
//			
			String resultString = ISO8583Handler.ISO8583Parser(configfile, hexData, 28, false, CustomExtensionsHandler.CONTENT_TYPE_HEXA );
			System.out.println(resultString);
			
		}
		

		// Conversion HEX a ISO8583 - Response
		{

//			String messageColpatria = "004649534f30303530303030353430383130383232303030303030323030303030303034303030303030303030303030303030313037323133363035303030303031303033303103";
//			String messageColpatria = "028149534f303235303030303533303231304232334338343831324543393834314130303030303030303134303030304443303033303030303030303030303130303030303130373231313730383135313630353136333332333031303732303031303130373031323038313131373030303031303031393337343039373434363439313735313639303d
			
//			String messageColpatria
			
			String messageColpatria = "00ISO0250000530210B23C84812EC9841A00000000140000DC0030000000000100000107211708151605163323010720010107012081117000010019374097446491751690=2001                0000021516050000005400002           0102       000076                                                                            027000000000000200302100000000170012            0160090TES10000    0190019TES103000000000114& 0000300114! C000026                   20      ! QE00056                                                         1110000000019284097446491751690            020                  P0011           009000000000012V B24 B24 1 038000                                   ";
			
			String result = messageColpatria;
			
			byte[] b = result.getBytes();
			
			int largo1 = result.length();
			
			String longitud1 = Converter.convertIntToHex(largo1);

			if(longitud1.length()%2 != 0){
				longitud1 = "0" + longitud1;
			}
			
			byte[] valorBytes = Converter.convertHexToByte(longitud1);
			byte[] respuesta = new byte[b.length+ valorBytes.length];
			
			for (int i = 0; i < valorBytes.length; i++) {
				respuesta[i] = valorBytes[i];
			}
			
			for (int i = 0; i < b.length; i++) {
				respuesta[i+ valorBytes.length] = b[i];
			}

			
			
			String responseString = new String(respuesta);

			
			String yHe = CustomExtensionsHandler.convertByteToHex(respuesta);
			
			hexData = Converter.convertStringToHex(messageColpatria);
			
//			String message = "008A0000160102008A00000054541300000000000000000000000410722020810ED08006104770430000260512003000000000054654071018230900000100765906483044F4F1F9F1F1F8F0F0F0F0F0F1F2F3F2F0F4F1F0F0D9D6F2F0F0F0F0F0F3F3F2F2F2F0F2F94040404040404001F5098611C000000000000000D4030419166200008507A0000000002502";

//			String response = message.substring(2, message.length());
			
//			byte[] dataByteAscii = Converter.convertHexToByte(hexData);
//			
//			String dataAscii = new String(dataByteAscii, "UTF-8");
//			
//			String stringHex = Converter.convertStringToHex(dataAscii,"UTF-8" );
//			
//			System.out.println(stringHex.equals(hexData));
//			
//			System.out.println(dataByteAscii.length);
			
			
			// HEX
			String resultString = ISO8583Handler.ISO8583Parser(configfile, hexData, 28, false, CustomExtensionsHandler.CONTENT_TYPE_HEXA );
	
			System.out.println(resultString);
			
			
			Object o = ISO8583Handler.ISO8583XmlToObject(resultString, "left", false, false);
			
			String responseIso = (String) o;
			System.out.println("***************************************************");
			System.out.println("Archivo Procesado: ");
			System.out.println("00" + responseIso);
			System.out.println(messageColpatria.toUpperCase());
			
			System.out.println("***************************************************");
			
			int length = responseIso.length()+2;
			
			length = 627;
			
			char lar = (char)length;
			
			String hexLength = Integer.toHexString(length);
			
			System.out.println(responseIso);
			
		}
	}

}
