/**
 * 
 */
package co.com.extensions.format;

import co.com.extensions.handlers.CustomExtensionsHandler;
import co.com.extensions.handlers.ISO8583Handler;

import com.itko.citi.Converter;



/**
 * @author alvgu02
 *
 */
public class ISO8583Format {
	
	private final static int HEADER_LEN = 2;
	
	/**
	 * @param argv
	 * @throws Exception
	 */
	public static void main(String argv[]) throws Exception {
		
		int messageLength = -1;
		
		messageLength = 240;
		String message1 = "&";
		
		String hexData = Converter.convertStringToHex(message1);
		
		
		int largo = message1.length();
		
		String longitud = Converter.convertIntToHex(largo);

		if(longitud.length()%2 != 0){
			longitud = "0" + longitud;
		}
		
		String resultHex = longitud + hexData;
		
		String final1 =Converter.convertHexToString(resultHex);
		
		String configfile = "E:\\Customers\\Colombia\\Colpatria\\Servicios_ISO8583_Documentados_09-09-2015\\8583-config.xml";

		// Conversion HEX a ISO8583 - Request
		{
			// String message = "
			
//			String message = "0200B2384481C9E0810000000000040000005000080000000030001008150018000026150018100865320000106601288066012881904142351704        150018010660MOVINT     BAN0591W02     0591                                    937008        2001340850518503004292";
			
//			String messageBr = "01110000160102011100000054541300000000000000000000000400F22464810CE080160000004001000000104770430000260512003000000000054654071018230900000118059405007601005906483044F4F1F9F1F1F8F0F0F0F0F0F1F2F3F2F0F4F1D9D6F2F0F0F0F0F0F3F3F2F2F2F0F2F940404040404040D7C1D9C37EF2F0F5D4C1C4C5C9D9C5C9D9C140C2D6D440D140C7D9C1E5C1E3C1C94040404040C2D9098605050000000711C000000000000000D4030419166200008507A0000000002502010000000107101823090000048304400000000000396E00360104C3D5D7D1020EF0F8F7F7F7F9F9F9F0F0F0F1F8F40301D5041440404040404040404040404040404040404040400505C2D5C4C5E2";
			
			String messageCredimatic
			String messageCredimatic
			String messageCredimatic3 = "01000000160102020070380001008000801642228230081760170000500000000600003589331807410825020138373635343332310203493030333833353839333330303030303030303030303036303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303073726f6c6573652020203030303030303030303030303030303030303030303030303030303030303030303030303030435445435445535049303033383335383933333030303030303030303032303135303832352020";
			String messageCredimatic4 = "01130001020016021070380001028000c016422282300817601700005000000006000035893318074108250201303038373635343332310203493030333833353839333330303030303030303030303036303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303073726f6c657365202020303030303030303030303030303030303030303030303030303030303030303030303030303043544543544553504930303338333538393333303030303030303030303230313530383235202000155452414e53414343494f4e204f4b20";
			String messageCredimatic5 = "0033000016010202006024340100800200164027483000034040000055354656000000000000000002013837363534333231000153";
			String messageColpatria = "00ISO0160000500200B238800128B1901000000000000000058900000000000000000911152240021911102240091109111110000000190375188410034062772=1607201100002830000001900005332501900005        PRUEBAS PISO 15          11001     CUNCO250                        044Z32                     400000170000000000001704C8C1B4392CB75BE0120190CER1+000084& 0000300084! QT00032 0130000190000533250000000000000 ! B400020 05151000000400    0 707E382300000000";
			
			
			String result = messageColpatria;
			hexData = Converter.convertStringToHex(result);
			
//			hexData
			
//			hexData = "008549534f3031343030303037333032303036323341303030313038383038303030333239313531333520202020202020202020203331303030313038323030373231313230303030303031393231313230363239303632393131303030303035393737373730303030303030303030303030323333303030303531534154424253383430";
//			messageCredimatic5 = Converter.convertHexToString(hexData);
//			result = messageCredimatic5;
//			System.out.println(Converter.convertHexToString(hexData));
			
//			Brasil
//			
			String resultString = ISO8583Handler.ISO8583Parser(configfile, hexData, 28, false, CustomExtensionsHandler.CONTENT_TYPE_HEXA );
			System.out.println(resultString);
			
			Object o = ISO8583Handler.ISO8583XmlToObject(resultString, "left", false, false);
			
			
			String responseIso = (String) o;
			
			
			
			String msgLength = Converter.convertIntToHex(responseIso.length()/2);
			
			while(msgLength.length()%4 != 0){
				msgLength = "0" + msgLength;
			}
			
			System.out.println("***************************************************");
			System.out.println("Archivo Procesado: ");
			System.out.println("Result: -" + responseIso + "-");
			System.out.println("Origin: -" + result.toUpperCase().substring(2) + "-");
			
			System.out.println("Son iguales: " + responseIso.equalsIgnoreCase(result.toUpperCase().substring(2)));
			
			System.out.println("***************************************************");

			
		}
		

		// Conversion HEX a ISO8583 - Response
		{

//			String messageColpatria = "004649534f30303530303030353430383130383232303030303030323030303030303034303030303030303030303030303030313037323133363035303030303031303033303103";
//			String messageColpatria = "028149534f303235303030303533303231304232334338343831324543393834314130303030303030303134303030304443303033303030303030303030303130303030303130373231313730383135313630353136333332333031303732303031303130373031323038313131373030303031303031393337343039373434363439313735313639303d
			
//			String messageColpatria
			
			String messageSenae = "00ISO0040000730210F02200000A000000000000000000001433110860           310001000002984298000368082400000694165700120& 0000200120! T100098 1791249879001LILE S.A.                               05505520151000521452             000000000000085& 0000200085! T300063 004000000036785110501007000001108076110404008000001839437110503";
			
			String messageColpatria = "00ISO0160000550210B23880012E92801800000000100000058900000000000000000911152242021911102240091109111110000000190375188410034062772=160720110000283000000190000533257617390001900005        2520000000000000002054474150120000000000001700120190CER1+0000130013TES1    P1110000000013798& 0000900798! P000036 000000000000000000000000000000000000! QT00032 0130000190000533250000007100000 ! B200158                                                                                                                                                               ! B300080                                                                                 ! B400020 051                 ! B500038                                       ! B600260                                                                                                                                                                                                                                                                     ! BJ00082                                                                                   BE3E65FC00000000";
			String result = messageColpatria;
			
			
			
//			hexData = "008549534f3031343030303037333032313036323341303030313038383038303030333239313531333520202020202020202020203331303030313038323030373231313230303030303031393231313230363239303632393131303030303035393737373730303030303030303030303030323333303030303531534154424253383430";
//			System.out.println("-" + Converter.convertHexToString(hexData) + "-");
			
			hexData = Converter.convertStringToHex(messageColpatria);
			
			System.out.println("-" + Converter.convertHexToString(hexData) + "-");
			
			
			// HEX
			String resultString = ISO8583Handler.ISO8583Parser(configfile, hexData, 28, false, CustomExtensionsHandler.CONTENT_TYPE_HEXA );
	
			System.out.println(resultString);
			
			
			Object o = ISO8583Handler.ISO8583XmlToObject(resultString, "left", false, false);
			
			String responseIso = (String) o;
			System.out.println("***************************************************");
			System.out.println("Archivo Procesado: ");
			System.out.println("Result: -" + responseIso + "-");
			System.out.println("Origin: -" + result.toUpperCase().substring(2) + "-");
			
			System.out.println("Son iguales: " + responseIso.equalsIgnoreCase(result.toUpperCase().substring(2)));
			
			System.out.println("***************************************************");
			
		}
 
	}

}
